[project]
name = "laime"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "bitbloxhub", email = "45184892+bitbloxhub@users.noreply.github.com" }
]
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]>=0.115.12",
    "httpx>=0.28.1",
    "llama-cpp-python>=0.3.8",
    "openai>=1.73.0",
    "pydantic-settings>=2.8.1",
    "sympy>=1.13.1",
    "transformers>=4.51.1",
]

[project.optional-dependencies]
cpu = [
	"torch==2.7.0+cpu",
	#"torch==2.7.0; sys_platform == 'darwin'",
	"sentence-transformers>=4.0.2",
]
cuda = [
	"torch>=2.7.0",
	"sentence-transformers>=4.0.2",
]

[tool.uv]
managed = true
package = true
python-preference = "only-system"
override-dependencies = [
    # Installing this causes issues with Nix because 
    # fastapi writes an program that errors to `bin/fastapi`
    # and this tries to overwrite it, but Nix does not let that happen.
    "fastapi-cli ; sys_platform == 'never'",
]
conflicts= [
	[
		{ extra = "cpu" },
		{ extra = "cuda" }
	]
]
environments = [
	"sys_platform == 'darwin'",
	"sys_platform == 'linux'",
]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"
explicit = true

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

[tool.uv.sources]
torch = [
	{ index = "pytorch-cpu", extra = "cpu" },
	{ index = "pytorch-cu126", extra = "cuda" },
]

[dependency-groups]
dev = [
    "basedpyright>=1.28.4",
    "importtime-waterfall>=1.0.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.3",
]

[tool.ruff]
format.indent-style = "tab"
target-version = "py313"
lint.select = ["E4", "E7", "E9", "F", "I", "ARG"]

[tool.basedpyright]
reportUnusedImport = false
reportUnusedVariable = false
reportUnusedParameter = false
reportDuplicateImport = false

[project.scripts]
laime = "laime:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
